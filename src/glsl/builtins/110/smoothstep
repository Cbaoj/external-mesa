((function smoothstep
   (signature float
     (parameters
       (declare (in) float edge0)
       (declare (in) float edge1)
       (declare (in) float x))
     ((declare () float t)

      (assign (constant bool (1)) (var_ref t)
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (var_ref x) (var_ref edge0)) (expression float - (var_ref edge1) (var_ref edge0)))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (return (expression float * (var_ref t) (expression float * (var_ref t) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (var_ref t))))))))

   (signature vec2
     (parameters
       (declare (in) float edge0)
       (declare (in) float edge1)
       (declare (in) vec2 x))
     ((declare () vec2 t)
      (declare () vec2 retval)

      (assign (constant bool (1)) (swiz x (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz x (var_ref x)) (var_ref edge0)) (expression float - (var_ref edge1) (var_ref edge0)))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz x (var_ref retval)) (expression float * (swiz x (var_ref t)) (expression float * (swiz x (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz x (var_ref t)))))))

      (assign (constant bool (1)) (swiz y (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz y (var_ref x)) (var_ref edge0)) (expression float - (var_ref edge1) (var_ref edge0)))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz y (var_ref retval)) (expression float * (swiz y (var_ref t)) (expression float * (swiz y (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz y (var_ref t)))))))
      (return (var_ref retval))
      ))

   (signature vec3
     (parameters
       (declare (in) float edge0)
       (declare (in) float edge1)
       (declare (in) vec3 x))
     ((declare () vec3 t)
      (declare () vec3 retval)

      (assign (constant bool (1)) (swiz x (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz x (var_ref x)) (var_ref edge0)) (expression float - (var_ref edge1) (var_ref edge0)))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz x (var_ref retval)) (expression float * (swiz x (var_ref t)) (expression float * (swiz x (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz x (var_ref t)))))))

      (assign (constant bool (1)) (swiz y (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz y (var_ref x)) (var_ref edge0)) (expression float - (var_ref edge1) (var_ref edge0)))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz y (var_ref retval)) (expression float * (swiz y (var_ref t)) (expression float * (swiz y (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz y (var_ref t)))))))

      (assign (constant bool (1)) (swiz z (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz z (var_ref x)) (var_ref edge0)) (expression float - (var_ref edge1) (var_ref edge0)))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz z (var_ref retval)) (expression float * (swiz z (var_ref t)) (expression float * (swiz z (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz z (var_ref t)))))))
      (return (var_ref retval))
      ))


   (signature vec4
     (parameters
       (declare (in) float edge0)
       (declare (in) float edge1)
       (declare (in) vec4 x))
     ((declare () vec4 t)
      (declare () vec4 retval)

      (assign (constant bool (1)) (swiz x (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz x (var_ref x)) (var_ref edge0)) (expression float - (var_ref edge1) (var_ref edge0)))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz x (var_ref retval)) (expression float * (swiz x (var_ref t)) (expression float * (swiz x (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz x (var_ref t)))))))

      (assign (constant bool (1)) (swiz y (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz y (var_ref x)) (var_ref edge0)) (expression float - (var_ref edge1) (var_ref edge0)))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz y (var_ref retval)) (expression float * (swiz y (var_ref t)) (expression float * (swiz y (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz y (var_ref t)))))))

      (assign (constant bool (1)) (swiz z (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz z (var_ref x)) (var_ref edge0)) (expression float - (var_ref edge1) (var_ref edge0)))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz z (var_ref retval)) (expression float * (swiz z (var_ref t)) (expression float * (swiz z (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz z (var_ref t)))))))

      (assign (constant bool (1)) (swiz w (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz w (var_ref x)) (var_ref edge0)) (expression float - (var_ref edge1) (var_ref edge0)))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz w (var_ref retval)) (expression float * (swiz w (var_ref t)) (expression float * (swiz w (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz w (var_ref t)))))))
      (return (var_ref retval))
      ))

   (signature vec2
     (parameters
       (declare (in) vec2 edge0)
       (declare (in) vec2 edge1)
       (declare (in) vec2 x))
     ((declare () vec2 t)
      (declare () vec2 retval)

      (assign (constant bool (1)) (swiz x (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz x (var_ref x)) (swiz x (var_ref edge0))) (expression float - (swiz x (var_ref edge1)) (swiz x (var_ref edge0))))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz x (var_ref retval)) (expression float * (swiz x (var_ref t)) (expression float * (swiz x (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz x (var_ref t)))))))

      (assign (constant bool (1)) (swiz y (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz y (var_ref x)) (swiz y (var_ref edge0))) (expression float - (swiz y (var_ref edge1)) (swiz y (var_ref edge0))))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz y (var_ref retval)) (expression float * (swiz y (var_ref t)) (expression float * (swiz y (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz y (var_ref t)))))))
      (return (var_ref retval))
      ))

   (signature vec3
     (parameters
       (declare (in) vec3 edge0)
       (declare (in) vec3 edge1)
       (declare (in) vec3 x))
     ((declare () vec3 t)
      (declare () vec3 retval)

      (assign (constant bool (1)) (swiz x (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz x (var_ref x)) (swiz x (var_ref edge0))) (expression float - (swiz x (var_ref edge1)) (swiz x (var_ref edge0))))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz x (var_ref retval)) (expression float * (swiz x (var_ref t)) (expression float * (swiz x (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz x (var_ref t)))))))

      (assign (constant bool (1)) (swiz y (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz y (var_ref x)) (swiz y (var_ref edge0))) (expression float - (swiz y (var_ref edge1)) (swiz y (var_ref edge0))))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz y (var_ref retval)) (expression float * (swiz y (var_ref t)) (expression float * (swiz y (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz y (var_ref t)))))))

      (assign (constant bool (1)) (swiz z (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz z (var_ref x)) (swiz z (var_ref edge0))) (expression float - (swiz z (var_ref edge1)) (swiz z (var_ref edge0))))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz z (var_ref retval)) (expression float * (swiz z (var_ref t)) (expression float * (swiz z (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz z (var_ref t)))))))
      (return (var_ref retval))
      ))


   (signature vec4
     (parameters
       (declare (in) vec4 edge0)
       (declare (in) vec4 edge1)
       (declare (in) vec4 x))
     ((declare () vec4 t)
      (declare () vec4 retval)

      (assign (constant bool (1)) (swiz x (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz x (var_ref x)) (swiz x (var_ref edge0))) (expression float - (swiz x (var_ref edge1)) (swiz x (var_ref edge0))))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz x (var_ref retval)) (expression float * (swiz x (var_ref t)) (expression float * (swiz x (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz x (var_ref t)))))))

      (assign (constant bool (1)) (swiz y (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz y (var_ref x)) (swiz y (var_ref edge0))) (expression float - (swiz y (var_ref edge1)) (swiz y (var_ref edge0))))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz y (var_ref retval)) (expression float * (swiz y (var_ref t)) (expression float * (swiz y (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz y (var_ref t)))))))

      (assign (constant bool (1)) (swiz z (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz z (var_ref x)) (swiz z (var_ref edge0))) (expression float - (swiz z (var_ref edge1)) (swiz z (var_ref edge0))))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz z (var_ref retval)) (expression float * (swiz z (var_ref t)) (expression float * (swiz z (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz z (var_ref t)))))))

      (assign (constant bool (1)) (swiz w (var_ref t))
              (expression float max
	                  (expression float min
	                              (expression float / (expression float - (swiz w (var_ref x)) (swiz w (var_ref edge0))) (expression float - (swiz w (var_ref edge1)) (swiz w (var_ref edge0))))
	                              (constant float (1.0)))
	                  (constant float (0.0))))
      (assign (constant bool (1)) (swiz w (var_ref retval)) (expression float * (swiz w (var_ref t)) (expression float * (swiz w (var_ref t)) (expression float - (constant float (3.000000)) (expression float * (constant float (2.000000)) (swiz w (var_ref t)))))))
      (return (var_ref retval))
      ))

))

